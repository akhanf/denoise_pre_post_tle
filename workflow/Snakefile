from snakebids import bids

configfile: 'config/config.yml'



def get_final_targets:
    func_targets = expand(bids(root='results',subject='{subject}',task='{task}',denoise='{denoise}',space='{space}',fwhm='{fwhm}',atlas='{atlas}',network='Yeo7',suffix='conn.txt'),\
            subject=config['subjects'],
            task='rest',
            denoise=config['denoise'].keys(),
            fwhm='5',
            space='MNI152NLin2009cAsym',
            atlas='schaefer')
    anat_targets = expand(bids(root='results',subject='{subject}',from_='{space}',space='T1w',desc='schaefer',suffix='dseg.nii.gz'),
                    subject=config['subjects'],
                    space='MNI152NLin2009cAsym')
    return func_targets + anat_targets


rule all:
    input:
        targets_ge = get_final_targets('ge'),
        targets_siemens = get_final_targets('siemens'),






def get_bold_nii(wildcards):
    return config['preproc_bold']

def get_bold_json(wildcards):
    return config['preproc_bold_json']

def get_mask_nii(wildcards):
    return config['preproc_mask']



rule resample_bold_preop:
    input:
        bold = get_bold_nii, 
        ref = 'resources/tpl-{space}_res-02_T1w.nii.gz',
        warp_pre_to_mni = config['warp_pre_to_mni'],
    output:
        bold = bids(root='results',subject='{subject}',task='{task}',space='{space}',desc='resampled',suffix='bold.nii.gz')
    container: config['ants_container']
    group: 'subj'
    shell:
        'antsApplyTransforms -d 3 -e 3 -i {input.bold} -o {output.bold} -r {input.ref} '
        '-t {input.warp_pre_to_mni} '



rule resample_mask_preop:
    input:
        mask = get_mask_nii,
        ref = 'resources/tpl-{space}_res-02_T1w.nii.gz',

    output:
        mask = bids(root='results/{prepost,preop}',subject='{subject}',site='{site}',task='{task}',space='{space}',desc='resampled',suffix='mask.nii.gz')
    container: config['ants_container']
    group: 'subj'
    shell:
        'antsApplyTransforms -d 3 -e 0 -i {input.mask} -o {output.mask} -r {input.ref} '
        '-n NearestNeighbor '
        '-t {input.warp_pre_to_mni} '



rule warp_atlas_to_preop_t1:
    input:
        atlas = 'resources/schaefer_2018/Schaefer2018_300Parcels_7Networks_order_FSLMNI152_1mm.nii.gz',
        warp_mni_to_pre = config['warp_mni_to_pre'],
        ref = config['preproc_t1']
    output: 
        atlas = bids(root='results',subject='{subject}',from_='{space}',space='T1w',desc='schaefer',suffix='dseg.nii.gz')
    container: config['ants_container']
    group: 'subj'
    shell:
        'antsApplyTransforms -d 3 -e 0 -i {input.atlas} -o {output.atlas} -r {input.ref} '
        '-n NearestNeighbor '
        '-t {input.warp_mni_to_pre}'



include: 'rules/interimfmri.smk'


